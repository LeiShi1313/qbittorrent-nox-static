# @credits https://github.com/c0re100/qBittorrent-Enhanced-Edition/blob/v4_3_x/.github/workflows/build_and_release.yml
name: qbittorrent-nox cmake multi build
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3000
    defaults:
      run:
        shell: bash
    container: alpine:latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: x86_64_v1_2
            arch_type: x86_64
            release_name: x86_64
            icu_step_name: icu skipped
            preview_release: false

          - name: x86_64_v2_0
            arch_type: x86_64
            release_name: x86_64
            icu_step_name: icu skipped
            libtorrent_v2: -lt $(git ls-remote -t --sort=-v:refname --refs https://github.com/arvidn/libtorrent.git | awk '/v2/{sub("refs/tags/", "");sub("(.*)(-[^0-9].*|rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | head -n 1)
            preview_release: true

          - name: icu_x86_64_v1_2
            arch_type: x86_64
            release_name: icu_x86_64
            icu_step_name: icu
            with_icu: bash qbittorrent-nox-static.sh icu
            qt_with_icu: -i
            preview_release: false

          - name: icu_x86_64_v2_0
            arch_type: x86_64
            release_name: icu_x86_64
            icu_step_name: icu
            with_icu: bash qbittorrent-nox-static.sh icu
            qt_with_icu: -i
            libtorrent_v2: -lt $(git ls-remote -t --sort=-v:refname --refs https://github.com/arvidn/libtorrent.git | awk '/v2/{sub("refs/tags/", "");sub("(.*)(-[^0-9].*|rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | head -n 1)
            preview_release: true

          - name: aarch64_v1_2
            arch_type: aarch64
            release_name: aarch64
            cross_host: aarch64-linux-musl
            cross_openssl: linux-aarch64
            cross_qt_xplatform: linux-aarch64-gnu-g++
            icu_step_name: icu skipped
            preview_release: false

          - name: aarch64_v2_0
            arch_type: aarch64
            release_name: aarch64
            cross_host: aarch64-linux-musl
            cross_openssl: linux-aarch64
            cross_qt_xplatform: linux-aarch64-gnu-g++
            icu_step_name: icu skipped
            libtorrent_v2: -lt $(git ls-remote -t --sort=-v:refname --refs https://github.com/arvidn/libtorrent.git | awk '/v2/{sub("refs/tags/", "");sub("(.*)(-[^0-9].*|rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | head -n 1)
            preview_release: true

          - name: icu_aarch64_v1_2
            arch_type: aarch64
            release_name: icu_aarch64
            cross_host: aarch64-linux-musl
            cross_openssl: linux-aarch64
            cross_qt_xplatform: linux-aarch64-gnu-g++
            icu_step_name: icu
            with_icu: bash qbittorrent-nox-static.sh icu
            qt_with_icu: -i
            preview_release: false

          - name: icu_aarch64_v2_0
            arch_type: aarch64
            release_name: icu_aarch64
            cross_host: aarch64-linux-musl
            cross_openssl: linux-aarch64
            cross_qt_xplatform: linux-aarch64-gnu-g++
            icu_step_name: icu
            with_icu: bash qbittorrent-nox-static.sh icu
            qt_with_icu: -i
            libtorrent_v2: -lt $(git ls-remote -t --sort=-v:refname --refs https://github.com/arvidn/libtorrent.git | awk '/v2/{sub("refs/tags/", "");sub("(.*)(-[^0-9].*|rc|alpha|beta)(.*)", ""); print $2 }' | awk '!/^$/' | head -n 1)
            preview_release: true
    name: "${{ matrix.name }}"
    env:
      build_dir: "qbt-build"
      qbt_build_tool: "cmake"
      qbt_cross_name: "${{ matrix.arch_type }}"
      qbt_cross_host: "${{ matrix.cross_host }}"
      qbt_cross_openssl: "${{ matrix.cross_openssl }}"
      qbt_cross_qt_xplatform: "${{ matrix.cross_qt_xplatform }}"
    steps:
      - uses: actions/checkout@v2.3.4
      - run: apk add bash git
        shell: ash {0}
      - name: Bootstrap
        run: bash qbittorrent-nox-static.sh "${{ matrix.libtorrent_v2 }}" -bs-a
      - name: Bootstrap release tag
        run: echo "release_tag=$(cat ${{ env.build_dir }}/release_info/tag.md)" >> $GITHUB_ENV
      - name: Bootstrap release title
        run: echo "release_title=$(cat ${{ env.build_dir }}/release_info/title.md)" >> $GITHUB_ENV
        #
      - name: libexecinfo
        run: bash qbittorrent-nox-static.sh libexecinfo
      - name: zlib
        run: bash qbittorrent-nox-static.sh zlib
      - name: openssl
        run: bash qbittorrent-nox-static.sh openssl
      - name: iconv
        run: bash qbittorrent-nox-static.sh iconv
      - name: ${{ matrix.icu_step_name }}
        run: "${{ matrix.with_icu }}"
      - name: boost
        run: bash qbittorrent-nox-static.sh boost
      - name: libtorrent
        run: bash qbittorrent-nox-static.sh "${{ matrix.libtorrent_v2 }}" libtorrent
      - name: qtbase ${{ matrix.qt_with_icu }}
        run: bash qbittorrent-nox-static.sh ${{ matrix.qt_with_icu }} qtbase
      - name: qttools
        run: bash qbittorrent-nox-static.sh qttools
      - name: qbittorrent
        run: bash qbittorrent-nox-static.sh "${{ matrix.libtorrent_v2 }}" qbittorrent
      #
      - name: "Set release asset name"
        run: mv -f "${{ env.build_dir }}/completed/qbittorrent-nox" "${{ env.build_dir }}/completed/qbittorrent-nox-${{ matrix.release_name }}"
      - name: "Set artifact asset name"
        run: mv -f "${{ env.build_dir }}/completed/qbittorrent_graph.png" "${{ env.build_dir }}/completed/qbittorrent_${{ matrix.name }}_graph.png"
      #
      - name: "Create release - tag - assets"
        uses: ncipollo/release-action@v1.8.6
        with:
          prerelease: ${{ matrix.preview_release }}
          artifacts: "${{ env.build_dir }}/completed/qbittorrent-nox-${{ matrix.release_name }}"
          replacesArtifacts: true
          tag: "${{ env.release_tag }}"
          name: "${{ env.release_title }}"
          bodyFile: "${{ env.build_dir }}/release_info/release.md"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2.2.3
        with:
          name: qbittorrent_${{ matrix.name }}_graph.png
          path: ${{ env.build_dir }}/completed/qbittorrent_${{ matrix.name }}_graph.png
